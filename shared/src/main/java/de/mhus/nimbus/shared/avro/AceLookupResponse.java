/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package de.mhus.nimbus.shared.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Response for ACE lookup request */
@org.apache.avro.specific.AvroGenerated
public class AceLookupResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8472050130381766174L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AceLookupResponse\",\"namespace\":\"de.mhus.nimbus.shared.avro\",\"doc\":\"Response for ACE lookup request\",\"fields\":[{\"name\":\"requestId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier for the original request\"},{\"name\":\"success\",\"type\":\"boolean\",\"doc\":\"Whether the operation was successful\"},{\"name\":\"aces\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AceInfo\",\"doc\":\"Information about an Access Control Entity\",\"fields\":[{\"name\":\"aceId\",\"type\":\"long\",\"doc\":\"The ID of the ACE\"},{\"name\":\"rule\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The access control rule\"},{\"name\":\"orderValue\",\"type\":\"int\",\"doc\":\"The order value of the ACE\"},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Optional description of the ACE\",\"default\":null},{\"name\":\"active\",\"type\":\"boolean\",\"doc\":\"Whether the ACE is active\"},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Timestamp when the ACE was created\"},{\"name\":\"updatedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Timestamp when the ACE was last updated\"}]}},\"doc\":\"List of found ACEs\",\"default\":[]},{\"name\":\"totalCount\",\"type\":\"long\",\"doc\":\"Total count of ACEs found\",\"default\":0},{\"name\":\"errorMessage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Error message if operation failed\",\"default\":null},{\"name\":\"timestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Timestamp when the response was created\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<AceLookupResponse> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AceLookupResponse> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AceLookupResponse> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AceLookupResponse> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AceLookupResponse> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AceLookupResponse to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AceLookupResponse from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AceLookupResponse instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AceLookupResponse fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Unique identifier for the original request */
  private java.lang.String requestId;
  /** Whether the operation was successful */
  private boolean success;
  /** List of found ACEs */
  private java.util.List<de.mhus.nimbus.shared.avro.AceInfo> aces;
  /** Total count of ACEs found */
  private long totalCount;
  /** Error message if operation failed */
  private java.lang.String errorMessage;
  /** Timestamp when the response was created */
  private java.time.Instant timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AceLookupResponse() {}

  /**
   * All-args constructor.
   * @param requestId Unique identifier for the original request
   * @param success Whether the operation was successful
   * @param aces List of found ACEs
   * @param totalCount Total count of ACEs found
   * @param errorMessage Error message if operation failed
   * @param timestamp Timestamp when the response was created
   */
  public AceLookupResponse(java.lang.String requestId, java.lang.Boolean success, java.util.List<de.mhus.nimbus.shared.avro.AceInfo> aces, java.lang.Long totalCount, java.lang.String errorMessage, java.time.Instant timestamp) {
    this.requestId = requestId;
    this.success = success;
    this.aces = aces;
    this.totalCount = totalCount;
    this.errorMessage = errorMessage;
    this.timestamp = timestamp.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return requestId;
    case 1: return success;
    case 2: return aces;
    case 3: return totalCount;
    case 4: return errorMessage;
    case 5: return timestamp;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: requestId = value$ != null ? value$.toString() : null; break;
    case 1: success = (java.lang.Boolean)value$; break;
    case 2: aces = (java.util.List<de.mhus.nimbus.shared.avro.AceInfo>)value$; break;
    case 3: totalCount = (java.lang.Long)value$; break;
    case 4: errorMessage = value$ != null ? value$.toString() : null; break;
    case 5: timestamp = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'requestId' field.
   * @return Unique identifier for the original request
   */
  public java.lang.String getRequestId() {
    return requestId;
  }


  /**
   * Sets the value of the 'requestId' field.
   * Unique identifier for the original request
   * @param value the value to set.
   */
  public void setRequestId(java.lang.String value) {
    this.requestId = value;
  }

  /**
   * Gets the value of the 'success' field.
   * @return Whether the operation was successful
   */
  public boolean getSuccess() {
    return success;
  }


  /**
   * Sets the value of the 'success' field.
   * Whether the operation was successful
   * @param value the value to set.
   */
  public void setSuccess(boolean value) {
    this.success = value;
  }

  /**
   * Gets the value of the 'aces' field.
   * @return List of found ACEs
   */
  public java.util.List<de.mhus.nimbus.shared.avro.AceInfo> getAces() {
    return aces;
  }


  /**
   * Sets the value of the 'aces' field.
   * List of found ACEs
   * @param value the value to set.
   */
  public void setAces(java.util.List<de.mhus.nimbus.shared.avro.AceInfo> value) {
    this.aces = value;
  }

  /**
   * Gets the value of the 'totalCount' field.
   * @return Total count of ACEs found
   */
  public long getTotalCount() {
    return totalCount;
  }


  /**
   * Sets the value of the 'totalCount' field.
   * Total count of ACEs found
   * @param value the value to set.
   */
  public void setTotalCount(long value) {
    this.totalCount = value;
  }

  /**
   * Gets the value of the 'errorMessage' field.
   * @return Error message if operation failed
   */
  public java.lang.String getErrorMessage() {
    return errorMessage;
  }


  /**
   * Sets the value of the 'errorMessage' field.
   * Error message if operation failed
   * @param value the value to set.
   */
  public void setErrorMessage(java.lang.String value) {
    this.errorMessage = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return Timestamp when the response was created
   */
  public java.time.Instant getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * Timestamp when the response was created
   * @param value the value to set.
   */
  public void setTimestamp(java.time.Instant value) {
    this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new AceLookupResponse RecordBuilder.
   * @return A new AceLookupResponse RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.AceLookupResponse.Builder newBuilder() {
    return new de.mhus.nimbus.shared.avro.AceLookupResponse.Builder();
  }

  /**
   * Creates a new AceLookupResponse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AceLookupResponse RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.AceLookupResponse.Builder newBuilder(de.mhus.nimbus.shared.avro.AceLookupResponse.Builder other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.AceLookupResponse.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.AceLookupResponse.Builder(other);
    }
  }

  /**
   * Creates a new AceLookupResponse RecordBuilder by copying an existing AceLookupResponse instance.
   * @param other The existing instance to copy.
   * @return A new AceLookupResponse RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.AceLookupResponse.Builder newBuilder(de.mhus.nimbus.shared.avro.AceLookupResponse other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.AceLookupResponse.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.AceLookupResponse.Builder(other);
    }
  }

  /**
   * RecordBuilder for AceLookupResponse instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AceLookupResponse>
    implements org.apache.avro.data.RecordBuilder<AceLookupResponse> {

    /** Unique identifier for the original request */
    private java.lang.String requestId;
    /** Whether the operation was successful */
    private boolean success;
    /** List of found ACEs */
    private java.util.List<de.mhus.nimbus.shared.avro.AceInfo> aces;
    /** Total count of ACEs found */
    private long totalCount;
    /** Error message if operation failed */
    private java.lang.String errorMessage;
    /** Timestamp when the response was created */
    private java.time.Instant timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.AceLookupResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.requestId)) {
        this.requestId = data().deepCopy(fields()[0].schema(), other.requestId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.success)) {
        this.success = data().deepCopy(fields()[1].schema(), other.success);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.aces)) {
        this.aces = data().deepCopy(fields()[2].schema(), other.aces);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.totalCount)) {
        this.totalCount = data().deepCopy(fields()[3].schema(), other.totalCount);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[4].schema(), other.errorMessage);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing AceLookupResponse instance
     * @param other The existing instance to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.AceLookupResponse other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.requestId)) {
        this.requestId = data().deepCopy(fields()[0].schema(), other.requestId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.success)) {
        this.success = data().deepCopy(fields()[1].schema(), other.success);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.aces)) {
        this.aces = data().deepCopy(fields()[2].schema(), other.aces);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.totalCount)) {
        this.totalCount = data().deepCopy(fields()[3].schema(), other.totalCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[4].schema(), other.errorMessage);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'requestId' field.
      * Unique identifier for the original request
      * @return The value.
      */
    public java.lang.String getRequestId() {
      return requestId;
    }


    /**
      * Sets the value of the 'requestId' field.
      * Unique identifier for the original request
      * @param value The value of 'requestId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder setRequestId(java.lang.String value) {
      validate(fields()[0], value);
      this.requestId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'requestId' field has been set.
      * Unique identifier for the original request
      * @return True if the 'requestId' field has been set, false otherwise.
      */
    public boolean hasRequestId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'requestId' field.
      * Unique identifier for the original request
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder clearRequestId() {
      requestId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'success' field.
      * Whether the operation was successful
      * @return The value.
      */
    public boolean getSuccess() {
      return success;
    }


    /**
      * Sets the value of the 'success' field.
      * Whether the operation was successful
      * @param value The value of 'success'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder setSuccess(boolean value) {
      validate(fields()[1], value);
      this.success = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'success' field has been set.
      * Whether the operation was successful
      * @return True if the 'success' field has been set, false otherwise.
      */
    public boolean hasSuccess() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'success' field.
      * Whether the operation was successful
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder clearSuccess() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'aces' field.
      * List of found ACEs
      * @return The value.
      */
    public java.util.List<de.mhus.nimbus.shared.avro.AceInfo> getAces() {
      return aces;
    }


    /**
      * Sets the value of the 'aces' field.
      * List of found ACEs
      * @param value The value of 'aces'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder setAces(java.util.List<de.mhus.nimbus.shared.avro.AceInfo> value) {
      validate(fields()[2], value);
      this.aces = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'aces' field has been set.
      * List of found ACEs
      * @return True if the 'aces' field has been set, false otherwise.
      */
    public boolean hasAces() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'aces' field.
      * List of found ACEs
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder clearAces() {
      aces = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalCount' field.
      * Total count of ACEs found
      * @return The value.
      */
    public long getTotalCount() {
      return totalCount;
    }


    /**
      * Sets the value of the 'totalCount' field.
      * Total count of ACEs found
      * @param value The value of 'totalCount'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder setTotalCount(long value) {
      validate(fields()[3], value);
      this.totalCount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'totalCount' field has been set.
      * Total count of ACEs found
      * @return True if the 'totalCount' field has been set, false otherwise.
      */
    public boolean hasTotalCount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'totalCount' field.
      * Total count of ACEs found
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder clearTotalCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorMessage' field.
      * Error message if operation failed
      * @return The value.
      */
    public java.lang.String getErrorMessage() {
      return errorMessage;
    }


    /**
      * Sets the value of the 'errorMessage' field.
      * Error message if operation failed
      * @param value The value of 'errorMessage'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder setErrorMessage(java.lang.String value) {
      validate(fields()[4], value);
      this.errorMessage = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'errorMessage' field has been set.
      * Error message if operation failed
      * @return True if the 'errorMessage' field has been set, false otherwise.
      */
    public boolean hasErrorMessage() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'errorMessage' field.
      * Error message if operation failed
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder clearErrorMessage() {
      errorMessage = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * Timestamp when the response was created
      * @return The value.
      */
    public java.time.Instant getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * Timestamp when the response was created
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder setTimestamp(java.time.Instant value) {
      validate(fields()[5], value);
      this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * Timestamp when the response was created
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * Timestamp when the response was created
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.AceLookupResponse.Builder clearTimestamp() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AceLookupResponse build() {
      try {
        AceLookupResponse record = new AceLookupResponse();
        record.requestId = fieldSetFlags()[0] ? this.requestId : (java.lang.String) defaultValue(fields()[0]);
        record.success = fieldSetFlags()[1] ? this.success : (java.lang.Boolean) defaultValue(fields()[1]);
        record.aces = fieldSetFlags()[2] ? this.aces : (java.util.List<de.mhus.nimbus.shared.avro.AceInfo>) defaultValue(fields()[2]);
        record.totalCount = fieldSetFlags()[3] ? this.totalCount : (java.lang.Long) defaultValue(fields()[3]);
        record.errorMessage = fieldSetFlags()[4] ? this.errorMessage : (java.lang.String) defaultValue(fields()[4]);
        record.timestamp = fieldSetFlags()[5] ? this.timestamp : (java.time.Instant) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AceLookupResponse>
    WRITER$ = (org.apache.avro.io.DatumWriter<AceLookupResponse>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AceLookupResponse>
    READER$ = (org.apache.avro.io.DatumReader<AceLookupResponse>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










