/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package de.mhus.nimbus.shared.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Schema für User-Lookup-Antworten im Nimbus Identity System */
@org.apache.avro.specific.AvroGenerated
public class UserLookupResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2645118765256721228L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserLookupResponse\",\"namespace\":\"de.mhus.nimbus.shared.avro\",\"doc\":\"Schema für User-Lookup-Antworten im Nimbus Identity System\",\"fields\":[{\"name\":\"requestId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"ID der ursprünglichen User-Lookup-Anfrage\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"UserLookupStatus\",\"symbols\":[\"SUCCESS\",\"USER_NOT_FOUND\",\"ERROR\",\"TIMEOUT\"]},\"doc\":\"Status der User-Lookup-Anfrage\"},{\"name\":\"user\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"UserInfo\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"username\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"firstName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":\"boolean\",\"default\":true},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"updatedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}],\"doc\":\"User-Informationen (bei erfolgreichem Lookup)\",\"default\":null},{\"name\":\"timestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Zeitstempel der Antwort\"},{\"name\":\"errorMessage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Fehlermeldung bei ERROR-Status\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<UserLookupResponse> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserLookupResponse> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserLookupResponse> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserLookupResponse> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserLookupResponse> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserLookupResponse to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserLookupResponse from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserLookupResponse instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserLookupResponse fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** ID der ursprünglichen User-Lookup-Anfrage */
  private java.lang.String requestId;
  /** Status der User-Lookup-Anfrage */
  private de.mhus.nimbus.shared.avro.UserLookupStatus status;
  /** User-Informationen (bei erfolgreichem Lookup) */
  private de.mhus.nimbus.shared.avro.UserInfo user;
  /** Zeitstempel der Antwort */
  private java.time.Instant timestamp;
  /** Fehlermeldung bei ERROR-Status */
  private java.lang.String errorMessage;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserLookupResponse() {}

  /**
   * All-args constructor.
   * @param requestId ID der ursprünglichen User-Lookup-Anfrage
   * @param status Status der User-Lookup-Anfrage
   * @param user User-Informationen (bei erfolgreichem Lookup)
   * @param timestamp Zeitstempel der Antwort
   * @param errorMessage Fehlermeldung bei ERROR-Status
   */
  public UserLookupResponse(java.lang.String requestId, de.mhus.nimbus.shared.avro.UserLookupStatus status, de.mhus.nimbus.shared.avro.UserInfo user, java.time.Instant timestamp, java.lang.String errorMessage) {
    this.requestId = requestId;
    this.status = status;
    this.user = user;
    this.timestamp = timestamp.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.errorMessage = errorMessage;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return requestId;
    case 1: return status;
    case 2: return user;
    case 3: return timestamp;
    case 4: return errorMessage;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: requestId = value$ != null ? value$.toString() : null; break;
    case 1: status = (de.mhus.nimbus.shared.avro.UserLookupStatus)value$; break;
    case 2: user = (de.mhus.nimbus.shared.avro.UserInfo)value$; break;
    case 3: timestamp = (java.time.Instant)value$; break;
    case 4: errorMessage = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'requestId' field.
   * @return ID der ursprünglichen User-Lookup-Anfrage
   */
  public java.lang.String getRequestId() {
    return requestId;
  }



  /**
   * Gets the value of the 'status' field.
   * @return Status der User-Lookup-Anfrage
   */
  public de.mhus.nimbus.shared.avro.UserLookupStatus getStatus() {
    return status;
  }



  /**
   * Gets the value of the 'user' field.
   * @return User-Informationen (bei erfolgreichem Lookup)
   */
  public de.mhus.nimbus.shared.avro.UserInfo getUser() {
    return user;
  }



  /**
   * Gets the value of the 'timestamp' field.
   * @return Zeitstempel der Antwort
   */
  public java.time.Instant getTimestamp() {
    return timestamp;
  }



  /**
   * Gets the value of the 'errorMessage' field.
   * @return Fehlermeldung bei ERROR-Status
   */
  public java.lang.String getErrorMessage() {
    return errorMessage;
  }



  /**
   * Creates a new UserLookupResponse RecordBuilder.
   * @return A new UserLookupResponse RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.UserLookupResponse.Builder newBuilder() {
    return new de.mhus.nimbus.shared.avro.UserLookupResponse.Builder();
  }

  /**
   * Creates a new UserLookupResponse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserLookupResponse RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.UserLookupResponse.Builder newBuilder(de.mhus.nimbus.shared.avro.UserLookupResponse.Builder other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.UserLookupResponse.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.UserLookupResponse.Builder(other);
    }
  }

  /**
   * Creates a new UserLookupResponse RecordBuilder by copying an existing UserLookupResponse instance.
   * @param other The existing instance to copy.
   * @return A new UserLookupResponse RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.UserLookupResponse.Builder newBuilder(de.mhus.nimbus.shared.avro.UserLookupResponse other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.UserLookupResponse.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.UserLookupResponse.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserLookupResponse instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserLookupResponse>
    implements org.apache.avro.data.RecordBuilder<UserLookupResponse> {

    /** ID der ursprünglichen User-Lookup-Anfrage */
    private java.lang.String requestId;
    /** Status der User-Lookup-Anfrage */
    private de.mhus.nimbus.shared.avro.UserLookupStatus status;
    /** User-Informationen (bei erfolgreichem Lookup) */
    private de.mhus.nimbus.shared.avro.UserInfo user;
    private de.mhus.nimbus.shared.avro.UserInfo.Builder userBuilder;
    /** Zeitstempel der Antwort */
    private java.time.Instant timestamp;
    /** Fehlermeldung bei ERROR-Status */
    private java.lang.String errorMessage;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.UserLookupResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.requestId)) {
        this.requestId = data().deepCopy(fields()[0].schema(), other.requestId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.status)) {
        this.status = data().deepCopy(fields()[1].schema(), other.status);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.user)) {
        this.user = data().deepCopy(fields()[2].schema(), other.user);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasUserBuilder()) {
        this.userBuilder = de.mhus.nimbus.shared.avro.UserInfo.newBuilder(other.getUserBuilder());
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[4].schema(), other.errorMessage);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing UserLookupResponse instance
     * @param other The existing instance to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.UserLookupResponse other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.requestId)) {
        this.requestId = data().deepCopy(fields()[0].schema(), other.requestId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.status)) {
        this.status = data().deepCopy(fields()[1].schema(), other.status);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.user)) {
        this.user = data().deepCopy(fields()[2].schema(), other.user);
        fieldSetFlags()[2] = true;
      }
      this.userBuilder = null;
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[4].schema(), other.errorMessage);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'requestId' field.
      * ID der ursprünglichen User-Lookup-Anfrage
      * @return The value.
      */
    public java.lang.String getRequestId() {
      return requestId;
    }


    /**
      * Sets the value of the 'requestId' field.
      * ID der ursprünglichen User-Lookup-Anfrage
      * @param value The value of 'requestId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder setRequestId(java.lang.String value) {
      validate(fields()[0], value);
      this.requestId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'requestId' field has been set.
      * ID der ursprünglichen User-Lookup-Anfrage
      * @return True if the 'requestId' field has been set, false otherwise.
      */
    public boolean hasRequestId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'requestId' field.
      * ID der ursprünglichen User-Lookup-Anfrage
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder clearRequestId() {
      requestId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * Status der User-Lookup-Anfrage
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.UserLookupStatus getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * Status der User-Lookup-Anfrage
      * @param value The value of 'status'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder setStatus(de.mhus.nimbus.shared.avro.UserLookupStatus value) {
      validate(fields()[1], value);
      this.status = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * Status der User-Lookup-Anfrage
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'status' field.
      * Status der User-Lookup-Anfrage
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder clearStatus() {
      status = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'user' field.
      * User-Informationen (bei erfolgreichem Lookup)
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.UserInfo getUser() {
      return user;
    }


    /**
      * Sets the value of the 'user' field.
      * User-Informationen (bei erfolgreichem Lookup)
      * @param value The value of 'user'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder setUser(de.mhus.nimbus.shared.avro.UserInfo value) {
      validate(fields()[2], value);
      this.userBuilder = null;
      this.user = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'user' field has been set.
      * User-Informationen (bei erfolgreichem Lookup)
      * @return True if the 'user' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'user' field and creates one if it doesn't exist yet.
     * User-Informationen (bei erfolgreichem Lookup)
     * @return This builder.
     */
    public de.mhus.nimbus.shared.avro.UserInfo.Builder getUserBuilder() {
      if (userBuilder == null) {
        if (hasUser()) {
          setUserBuilder(de.mhus.nimbus.shared.avro.UserInfo.newBuilder(user));
        } else {
          setUserBuilder(de.mhus.nimbus.shared.avro.UserInfo.newBuilder());
        }
      }
      return userBuilder;
    }

    /**
     * Sets the Builder instance for the 'user' field
     * User-Informationen (bei erfolgreichem Lookup)
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder setUserBuilder(de.mhus.nimbus.shared.avro.UserInfo.Builder value) {
      clearUser();
      userBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'user' field has an active Builder instance
     * User-Informationen (bei erfolgreichem Lookup)
     * @return True if the 'user' field has an active Builder instance
     */
    public boolean hasUserBuilder() {
      return userBuilder != null;
    }

    /**
      * Clears the value of the 'user' field.
      * User-Informationen (bei erfolgreichem Lookup)
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder clearUser() {
      user = null;
      userBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * Zeitstempel der Antwort
      * @return The value.
      */
    public java.time.Instant getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * Zeitstempel der Antwort
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder setTimestamp(java.time.Instant value) {
      validate(fields()[3], value);
      this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * Zeitstempel der Antwort
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * Zeitstempel der Antwort
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder clearTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorMessage' field.
      * Fehlermeldung bei ERROR-Status
      * @return The value.
      */
    public java.lang.String getErrorMessage() {
      return errorMessage;
    }


    /**
      * Sets the value of the 'errorMessage' field.
      * Fehlermeldung bei ERROR-Status
      * @param value The value of 'errorMessage'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder setErrorMessage(java.lang.String value) {
      validate(fields()[4], value);
      this.errorMessage = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'errorMessage' field has been set.
      * Fehlermeldung bei ERROR-Status
      * @return True if the 'errorMessage' field has been set, false otherwise.
      */
    public boolean hasErrorMessage() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'errorMessage' field.
      * Fehlermeldung bei ERROR-Status
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.UserLookupResponse.Builder clearErrorMessage() {
      errorMessage = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserLookupResponse build() {
      try {
        UserLookupResponse record = new UserLookupResponse();
        record.requestId = fieldSetFlags()[0] ? this.requestId : (java.lang.String) defaultValue(fields()[0]);
        record.status = fieldSetFlags()[1] ? this.status : (de.mhus.nimbus.shared.avro.UserLookupStatus) defaultValue(fields()[1]);
        if (userBuilder != null) {
          try {
            record.user = this.userBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("user"));
            throw e;
          }
        } else {
          record.user = fieldSetFlags()[2] ? this.user : (de.mhus.nimbus.shared.avro.UserInfo) defaultValue(fields()[2]);
        }
        record.timestamp = fieldSetFlags()[3] ? this.timestamp : (java.time.Instant) defaultValue(fields()[3]);
        record.errorMessage = fieldSetFlags()[4] ? this.errorMessage : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserLookupResponse>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserLookupResponse>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserLookupResponse>
    READER$ = (org.apache.avro.io.DatumReader<UserLookupResponse>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










