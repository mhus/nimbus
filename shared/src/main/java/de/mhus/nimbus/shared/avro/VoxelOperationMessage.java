/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package de.mhus.nimbus.shared.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Message for voxel operations via Kafka */
@org.apache.avro.specific.AvroGenerated
public class VoxelOperationMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7513700940976838076L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VoxelOperationMessage\",\"namespace\":\"de.mhus.nimbus.shared.avro\",\"doc\":\"Message for voxel operations via Kafka\",\"fields\":[{\"name\":\"messageId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier for the message\"},{\"name\":\"operation\",\"type\":{\"type\":\"enum\",\"name\":\"OperationType\",\"symbols\":[\"SAVE\",\"DELETE\",\"BATCH_SAVE\",\"CLEAR_CHUNK\"]},\"doc\":\"Type of operation to perform\"},{\"name\":\"worldId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"World identifier\"},{\"name\":\"voxelData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"VoxelData\",\"fields\":[{\"name\":\"x\",\"type\":\"int\"},{\"name\":\"y\",\"type\":\"int\"},{\"name\":\"z\",\"type\":\"int\"},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"chunkData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ChunkData\",\"fields\":[{\"name\":\"chunkX\",\"type\":\"int\"},{\"name\":\"chunkY\",\"type\":\"int\"},{\"name\":\"chunkZ\",\"type\":\"int\"},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"includeEmpty\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"batchData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BatchData\",\"fields\":[{\"name\":\"voxels\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AvroVoxel\",\"fields\":[{\"name\":\"x\",\"type\":\"int\"},{\"name\":\"y\",\"type\":\"int\"},{\"name\":\"z\",\"type\":\"int\"},{\"name\":\"voxelType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"material\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"health\",\"type\":[\"null\",\"float\"],\"default\":null},{\"name\":\"tags\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"default\":null}]}}}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<VoxelOperationMessage> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<VoxelOperationMessage> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<VoxelOperationMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<VoxelOperationMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<VoxelOperationMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this VoxelOperationMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a VoxelOperationMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a VoxelOperationMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static VoxelOperationMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Unique identifier for the message */
  private java.lang.String messageId;
  /** Type of operation to perform */
  private de.mhus.nimbus.shared.avro.OperationType operation;
  /** World identifier */
  private java.lang.String worldId;
  private de.mhus.nimbus.shared.avro.VoxelData voxelData;
  private de.mhus.nimbus.shared.avro.ChunkData chunkData;
  private de.mhus.nimbus.shared.avro.BatchData batchData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public VoxelOperationMessage() {}

  /**
   * All-args constructor.
   * @param messageId Unique identifier for the message
   * @param operation Type of operation to perform
   * @param worldId World identifier
   * @param voxelData The new value for voxelData
   * @param chunkData The new value for chunkData
   * @param batchData The new value for batchData
   */
  public VoxelOperationMessage(java.lang.String messageId, de.mhus.nimbus.shared.avro.OperationType operation, java.lang.String worldId, de.mhus.nimbus.shared.avro.VoxelData voxelData, de.mhus.nimbus.shared.avro.ChunkData chunkData, de.mhus.nimbus.shared.avro.BatchData batchData) {
    this.messageId = messageId;
    this.operation = operation;
    this.worldId = worldId;
    this.voxelData = voxelData;
    this.chunkData = chunkData;
    this.batchData = batchData;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return messageId;
    case 1: return operation;
    case 2: return worldId;
    case 3: return voxelData;
    case 4: return chunkData;
    case 5: return batchData;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: messageId = value$ != null ? value$.toString() : null; break;
    case 1: operation = (de.mhus.nimbus.shared.avro.OperationType)value$; break;
    case 2: worldId = value$ != null ? value$.toString() : null; break;
    case 3: voxelData = (de.mhus.nimbus.shared.avro.VoxelData)value$; break;
    case 4: chunkData = (de.mhus.nimbus.shared.avro.ChunkData)value$; break;
    case 5: batchData = (de.mhus.nimbus.shared.avro.BatchData)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'messageId' field.
   * @return Unique identifier for the message
   */
  public java.lang.String getMessageId() {
    return messageId;
  }


  /**
   * Sets the value of the 'messageId' field.
   * Unique identifier for the message
   * @param value the value to set.
   */
  public void setMessageId(java.lang.String value) {
    this.messageId = value;
  }

  /**
   * Gets the value of the 'operation' field.
   * @return Type of operation to perform
   */
  public de.mhus.nimbus.shared.avro.OperationType getOperation() {
    return operation;
  }


  /**
   * Sets the value of the 'operation' field.
   * Type of operation to perform
   * @param value the value to set.
   */
  public void setOperation(de.mhus.nimbus.shared.avro.OperationType value) {
    this.operation = value;
  }

  /**
   * Gets the value of the 'worldId' field.
   * @return World identifier
   */
  public java.lang.String getWorldId() {
    return worldId;
  }


  /**
   * Sets the value of the 'worldId' field.
   * World identifier
   * @param value the value to set.
   */
  public void setWorldId(java.lang.String value) {
    this.worldId = value;
  }

  /**
   * Gets the value of the 'voxelData' field.
   * @return The value of the 'voxelData' field.
   */
  public de.mhus.nimbus.shared.avro.VoxelData getVoxelData() {
    return voxelData;
  }


  /**
   * Sets the value of the 'voxelData' field.
   * @param value the value to set.
   */
  public void setVoxelData(de.mhus.nimbus.shared.avro.VoxelData value) {
    this.voxelData = value;
  }

  /**
   * Gets the value of the 'chunkData' field.
   * @return The value of the 'chunkData' field.
   */
  public de.mhus.nimbus.shared.avro.ChunkData getChunkData() {
    return chunkData;
  }


  /**
   * Sets the value of the 'chunkData' field.
   * @param value the value to set.
   */
  public void setChunkData(de.mhus.nimbus.shared.avro.ChunkData value) {
    this.chunkData = value;
  }

  /**
   * Gets the value of the 'batchData' field.
   * @return The value of the 'batchData' field.
   */
  public de.mhus.nimbus.shared.avro.BatchData getBatchData() {
    return batchData;
  }


  /**
   * Sets the value of the 'batchData' field.
   * @param value the value to set.
   */
  public void setBatchData(de.mhus.nimbus.shared.avro.BatchData value) {
    this.batchData = value;
  }

  /**
   * Creates a new VoxelOperationMessage RecordBuilder.
   * @return A new VoxelOperationMessage RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder newBuilder() {
    return new de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder();
  }

  /**
   * Creates a new VoxelOperationMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new VoxelOperationMessage RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder newBuilder(de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder(other);
    }
  }

  /**
   * Creates a new VoxelOperationMessage RecordBuilder by copying an existing VoxelOperationMessage instance.
   * @param other The existing instance to copy.
   * @return A new VoxelOperationMessage RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder newBuilder(de.mhus.nimbus.shared.avro.VoxelOperationMessage other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for VoxelOperationMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VoxelOperationMessage>
    implements org.apache.avro.data.RecordBuilder<VoxelOperationMessage> {

    /** Unique identifier for the message */
    private java.lang.String messageId;
    /** Type of operation to perform */
    private de.mhus.nimbus.shared.avro.OperationType operation;
    /** World identifier */
    private java.lang.String worldId;
    private de.mhus.nimbus.shared.avro.VoxelData voxelData;
    private de.mhus.nimbus.shared.avro.VoxelData.Builder voxelDataBuilder;
    private de.mhus.nimbus.shared.avro.ChunkData chunkData;
    private de.mhus.nimbus.shared.avro.ChunkData.Builder chunkDataBuilder;
    private de.mhus.nimbus.shared.avro.BatchData batchData;
    private de.mhus.nimbus.shared.avro.BatchData.Builder batchDataBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.messageId)) {
        this.messageId = data().deepCopy(fields()[0].schema(), other.messageId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.operation)) {
        this.operation = data().deepCopy(fields()[1].schema(), other.operation);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.worldId)) {
        this.worldId = data().deepCopy(fields()[2].schema(), other.worldId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.voxelData)) {
        this.voxelData = data().deepCopy(fields()[3].schema(), other.voxelData);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasVoxelDataBuilder()) {
        this.voxelDataBuilder = de.mhus.nimbus.shared.avro.VoxelData.newBuilder(other.getVoxelDataBuilder());
      }
      if (isValidValue(fields()[4], other.chunkData)) {
        this.chunkData = data().deepCopy(fields()[4].schema(), other.chunkData);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasChunkDataBuilder()) {
        this.chunkDataBuilder = de.mhus.nimbus.shared.avro.ChunkData.newBuilder(other.getChunkDataBuilder());
      }
      if (isValidValue(fields()[5], other.batchData)) {
        this.batchData = data().deepCopy(fields()[5].schema(), other.batchData);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasBatchDataBuilder()) {
        this.batchDataBuilder = de.mhus.nimbus.shared.avro.BatchData.newBuilder(other.getBatchDataBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing VoxelOperationMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.VoxelOperationMessage other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.messageId)) {
        this.messageId = data().deepCopy(fields()[0].schema(), other.messageId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.operation)) {
        this.operation = data().deepCopy(fields()[1].schema(), other.operation);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.worldId)) {
        this.worldId = data().deepCopy(fields()[2].schema(), other.worldId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.voxelData)) {
        this.voxelData = data().deepCopy(fields()[3].schema(), other.voxelData);
        fieldSetFlags()[3] = true;
      }
      this.voxelDataBuilder = null;
      if (isValidValue(fields()[4], other.chunkData)) {
        this.chunkData = data().deepCopy(fields()[4].schema(), other.chunkData);
        fieldSetFlags()[4] = true;
      }
      this.chunkDataBuilder = null;
      if (isValidValue(fields()[5], other.batchData)) {
        this.batchData = data().deepCopy(fields()[5].schema(), other.batchData);
        fieldSetFlags()[5] = true;
      }
      this.batchDataBuilder = null;
    }

    /**
      * Gets the value of the 'messageId' field.
      * Unique identifier for the message
      * @return The value.
      */
    public java.lang.String getMessageId() {
      return messageId;
    }


    /**
      * Sets the value of the 'messageId' field.
      * Unique identifier for the message
      * @param value The value of 'messageId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setMessageId(java.lang.String value) {
      validate(fields()[0], value);
      this.messageId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'messageId' field has been set.
      * Unique identifier for the message
      * @return True if the 'messageId' field has been set, false otherwise.
      */
    public boolean hasMessageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'messageId' field.
      * Unique identifier for the message
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder clearMessageId() {
      messageId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'operation' field.
      * Type of operation to perform
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.OperationType getOperation() {
      return operation;
    }


    /**
      * Sets the value of the 'operation' field.
      * Type of operation to perform
      * @param value The value of 'operation'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setOperation(de.mhus.nimbus.shared.avro.OperationType value) {
      validate(fields()[1], value);
      this.operation = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'operation' field has been set.
      * Type of operation to perform
      * @return True if the 'operation' field has been set, false otherwise.
      */
    public boolean hasOperation() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'operation' field.
      * Type of operation to perform
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder clearOperation() {
      operation = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'worldId' field.
      * World identifier
      * @return The value.
      */
    public java.lang.String getWorldId() {
      return worldId;
    }


    /**
      * Sets the value of the 'worldId' field.
      * World identifier
      * @param value The value of 'worldId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setWorldId(java.lang.String value) {
      validate(fields()[2], value);
      this.worldId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'worldId' field has been set.
      * World identifier
      * @return True if the 'worldId' field has been set, false otherwise.
      */
    public boolean hasWorldId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'worldId' field.
      * World identifier
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder clearWorldId() {
      worldId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'voxelData' field.
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.VoxelData getVoxelData() {
      return voxelData;
    }


    /**
      * Sets the value of the 'voxelData' field.
      * @param value The value of 'voxelData'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setVoxelData(de.mhus.nimbus.shared.avro.VoxelData value) {
      validate(fields()[3], value);
      this.voxelDataBuilder = null;
      this.voxelData = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'voxelData' field has been set.
      * @return True if the 'voxelData' field has been set, false otherwise.
      */
    public boolean hasVoxelData() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'voxelData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public de.mhus.nimbus.shared.avro.VoxelData.Builder getVoxelDataBuilder() {
      if (voxelDataBuilder == null) {
        if (hasVoxelData()) {
          setVoxelDataBuilder(de.mhus.nimbus.shared.avro.VoxelData.newBuilder(voxelData));
        } else {
          setVoxelDataBuilder(de.mhus.nimbus.shared.avro.VoxelData.newBuilder());
        }
      }
      return voxelDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'voxelData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setVoxelDataBuilder(de.mhus.nimbus.shared.avro.VoxelData.Builder value) {
      clearVoxelData();
      voxelDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'voxelData' field has an active Builder instance
     * @return True if the 'voxelData' field has an active Builder instance
     */
    public boolean hasVoxelDataBuilder() {
      return voxelDataBuilder != null;
    }

    /**
      * Clears the value of the 'voxelData' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder clearVoxelData() {
      voxelData = null;
      voxelDataBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'chunkData' field.
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.ChunkData getChunkData() {
      return chunkData;
    }


    /**
      * Sets the value of the 'chunkData' field.
      * @param value The value of 'chunkData'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setChunkData(de.mhus.nimbus.shared.avro.ChunkData value) {
      validate(fields()[4], value);
      this.chunkDataBuilder = null;
      this.chunkData = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'chunkData' field has been set.
      * @return True if the 'chunkData' field has been set, false otherwise.
      */
    public boolean hasChunkData() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'chunkData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public de.mhus.nimbus.shared.avro.ChunkData.Builder getChunkDataBuilder() {
      if (chunkDataBuilder == null) {
        if (hasChunkData()) {
          setChunkDataBuilder(de.mhus.nimbus.shared.avro.ChunkData.newBuilder(chunkData));
        } else {
          setChunkDataBuilder(de.mhus.nimbus.shared.avro.ChunkData.newBuilder());
        }
      }
      return chunkDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'chunkData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setChunkDataBuilder(de.mhus.nimbus.shared.avro.ChunkData.Builder value) {
      clearChunkData();
      chunkDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chunkData' field has an active Builder instance
     * @return True if the 'chunkData' field has an active Builder instance
     */
    public boolean hasChunkDataBuilder() {
      return chunkDataBuilder != null;
    }

    /**
      * Clears the value of the 'chunkData' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder clearChunkData() {
      chunkData = null;
      chunkDataBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchData' field.
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.BatchData getBatchData() {
      return batchData;
    }


    /**
      * Sets the value of the 'batchData' field.
      * @param value The value of 'batchData'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setBatchData(de.mhus.nimbus.shared.avro.BatchData value) {
      validate(fields()[5], value);
      this.batchDataBuilder = null;
      this.batchData = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'batchData' field has been set.
      * @return True if the 'batchData' field has been set, false otherwise.
      */
    public boolean hasBatchData() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'batchData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public de.mhus.nimbus.shared.avro.BatchData.Builder getBatchDataBuilder() {
      if (batchDataBuilder == null) {
        if (hasBatchData()) {
          setBatchDataBuilder(de.mhus.nimbus.shared.avro.BatchData.newBuilder(batchData));
        } else {
          setBatchDataBuilder(de.mhus.nimbus.shared.avro.BatchData.newBuilder());
        }
      }
      return batchDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'batchData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder setBatchDataBuilder(de.mhus.nimbus.shared.avro.BatchData.Builder value) {
      clearBatchData();
      batchDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'batchData' field has an active Builder instance
     * @return True if the 'batchData' field has an active Builder instance
     */
    public boolean hasBatchDataBuilder() {
      return batchDataBuilder != null;
    }

    /**
      * Clears the value of the 'batchData' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.VoxelOperationMessage.Builder clearBatchData() {
      batchData = null;
      batchDataBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public VoxelOperationMessage build() {
      try {
        VoxelOperationMessage record = new VoxelOperationMessage();
        record.messageId = fieldSetFlags()[0] ? this.messageId : (java.lang.String) defaultValue(fields()[0]);
        record.operation = fieldSetFlags()[1] ? this.operation : (de.mhus.nimbus.shared.avro.OperationType) defaultValue(fields()[1]);
        record.worldId = fieldSetFlags()[2] ? this.worldId : (java.lang.String) defaultValue(fields()[2]);
        if (voxelDataBuilder != null) {
          try {
            record.voxelData = this.voxelDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("voxelData"));
            throw e;
          }
        } else {
          record.voxelData = fieldSetFlags()[3] ? this.voxelData : (de.mhus.nimbus.shared.avro.VoxelData) defaultValue(fields()[3]);
        }
        if (chunkDataBuilder != null) {
          try {
            record.chunkData = this.chunkDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chunkData"));
            throw e;
          }
        } else {
          record.chunkData = fieldSetFlags()[4] ? this.chunkData : (de.mhus.nimbus.shared.avro.ChunkData) defaultValue(fields()[4]);
        }
        if (batchDataBuilder != null) {
          try {
            record.batchData = this.batchDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("batchData"));
            throw e;
          }
        } else {
          record.batchData = fieldSetFlags()[5] ? this.batchData : (de.mhus.nimbus.shared.avro.BatchData) defaultValue(fields()[5]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<VoxelOperationMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<VoxelOperationMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<VoxelOperationMessage>
    READER$ = (org.apache.avro.io.DatumReader<VoxelOperationMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.messageId);

    out.writeEnum(this.operation.ordinal());

    out.writeString(this.worldId);

    if (this.voxelData == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.voxelData.customEncode(out);
    }

    if (this.chunkData == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.chunkData.customEncode(out);
    }

    if (this.batchData == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.batchData.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.messageId = in.readString();

      this.operation = de.mhus.nimbus.shared.avro.OperationType.values()[in.readEnum()];

      this.worldId = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.voxelData = null;
      } else {
        if (this.voxelData == null) {
          this.voxelData = new de.mhus.nimbus.shared.avro.VoxelData();
        }
        this.voxelData.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.chunkData = null;
      } else {
        if (this.chunkData == null) {
          this.chunkData = new de.mhus.nimbus.shared.avro.ChunkData();
        }
        this.chunkData.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.batchData = null;
      } else {
        if (this.batchData == null) {
          this.batchData = new de.mhus.nimbus.shared.avro.BatchData();
        }
        this.batchData.customDecode(in);
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.messageId = in.readString();
          break;

        case 1:
          this.operation = de.mhus.nimbus.shared.avro.OperationType.values()[in.readEnum()];
          break;

        case 2:
          this.worldId = in.readString();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.voxelData = null;
          } else {
            if (this.voxelData == null) {
              this.voxelData = new de.mhus.nimbus.shared.avro.VoxelData();
            }
            this.voxelData.customDecode(in);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.chunkData = null;
          } else {
            if (this.chunkData == null) {
              this.chunkData = new de.mhus.nimbus.shared.avro.ChunkData();
            }
            this.chunkData.customDecode(in);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.batchData = null;
          } else {
            if (this.batchData == null) {
              this.batchData = new de.mhus.nimbus.shared.avro.BatchData();
            }
            this.batchData.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










