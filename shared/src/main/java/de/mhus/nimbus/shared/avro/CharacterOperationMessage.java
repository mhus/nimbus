/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package de.mhus.nimbus.shared.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Message for character operations via Kafka */
@org.apache.avro.specific.AvroGenerated
public class CharacterOperationMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5640497814926415142L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CharacterOperationMessage\",\"namespace\":\"de.mhus.nimbus.shared.avro\",\"doc\":\"Message for character operations via Kafka\",\"fields\":[{\"name\":\"messageId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier for the message\"},{\"name\":\"operation\",\"type\":{\"type\":\"enum\",\"name\":\"CharacterOperationType\",\"symbols\":[\"CREATE\",\"UPDATE_POSITION\",\"UPDATE_HEALTH\",\"UPDATE_INFO\",\"DELETE\",\"BATCH_CREATE\"]},\"doc\":\"Type of character operation to perform\"},{\"name\":\"worldId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"World identifier where the character operation takes place\"},{\"name\":\"characterData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CharacterData\",\"fields\":[{\"name\":\"characterId\",\"type\":[\"null\",\"long\"],\"doc\":\"ID of the character (for updates/deletes)\",\"default\":null},{\"name\":\"characterType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type of the character (for creation)\",\"default\":null},{\"name\":\"x\",\"type\":[\"null\",\"double\"],\"doc\":\"X coordinate\",\"default\":null},{\"name\":\"y\",\"type\":[\"null\",\"double\"],\"doc\":\"Y coordinate\",\"default\":null},{\"name\":\"z\",\"type\":[\"null\",\"double\"],\"doc\":\"Z coordinate\",\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Character name\",\"default\":null},{\"name\":\"displayName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Character display name\",\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Character description\",\"default\":null},{\"name\":\"health\",\"type\":[\"null\",\"int\"],\"doc\":\"Current health points\",\"default\":null},{\"name\":\"maxHealth\",\"type\":[\"null\",\"int\"],\"doc\":\"Maximum health points\",\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Whether the character is active\",\"default\":null}]}],\"doc\":\"Character data for single character operations\",\"default\":null},{\"name\":\"batchData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CharacterBatchData\",\"fields\":[{\"name\":\"charactersJson\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"JSON array of characters for batch operations\"}]}],\"doc\":\"Batch data for multiple character operations\",\"default\":null},{\"name\":\"timestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Timestamp of the operation in milliseconds\"},{\"name\":\"requestedBy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Service or user that requested the operation\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<CharacterOperationMessage> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CharacterOperationMessage> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CharacterOperationMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CharacterOperationMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CharacterOperationMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CharacterOperationMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CharacterOperationMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CharacterOperationMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CharacterOperationMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Unique identifier for the message */
  private java.lang.String messageId;
  /** Type of character operation to perform */
  private de.mhus.nimbus.shared.avro.CharacterOperationType operation;
  /** World identifier where the character operation takes place */
  private java.lang.String worldId;
  /** Character data for single character operations */
  private de.mhus.nimbus.shared.avro.CharacterData characterData;
  /** Batch data for multiple character operations */
  private de.mhus.nimbus.shared.avro.CharacterBatchData batchData;
  /** Timestamp of the operation in milliseconds */
  private java.time.Instant timestamp;
  /** Service or user that requested the operation */
  private java.lang.String requestedBy;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CharacterOperationMessage() {}

  /**
   * All-args constructor.
   * @param messageId Unique identifier for the message
   * @param operation Type of character operation to perform
   * @param worldId World identifier where the character operation takes place
   * @param characterData Character data for single character operations
   * @param batchData Batch data for multiple character operations
   * @param timestamp Timestamp of the operation in milliseconds
   * @param requestedBy Service or user that requested the operation
   */
  public CharacterOperationMessage(java.lang.String messageId, de.mhus.nimbus.shared.avro.CharacterOperationType operation, java.lang.String worldId, de.mhus.nimbus.shared.avro.CharacterData characterData, de.mhus.nimbus.shared.avro.CharacterBatchData batchData, java.time.Instant timestamp, java.lang.String requestedBy) {
    this.messageId = messageId;
    this.operation = operation;
    this.worldId = worldId;
    this.characterData = characterData;
    this.batchData = batchData;
    this.timestamp = timestamp.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.requestedBy = requestedBy;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return messageId;
    case 1: return operation;
    case 2: return worldId;
    case 3: return characterData;
    case 4: return batchData;
    case 5: return timestamp;
    case 6: return requestedBy;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: messageId = value$ != null ? value$.toString() : null; break;
    case 1: operation = (de.mhus.nimbus.shared.avro.CharacterOperationType)value$; break;
    case 2: worldId = value$ != null ? value$.toString() : null; break;
    case 3: characterData = (de.mhus.nimbus.shared.avro.CharacterData)value$; break;
    case 4: batchData = (de.mhus.nimbus.shared.avro.CharacterBatchData)value$; break;
    case 5: timestamp = (java.time.Instant)value$; break;
    case 6: requestedBy = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'messageId' field.
   * @return Unique identifier for the message
   */
  public java.lang.String getMessageId() {
    return messageId;
  }


  /**
   * Sets the value of the 'messageId' field.
   * Unique identifier for the message
   * @param value the value to set.
   */
  public void setMessageId(java.lang.String value) {
    this.messageId = value;
  }

  /**
   * Gets the value of the 'operation' field.
   * @return Type of character operation to perform
   */
  public de.mhus.nimbus.shared.avro.CharacterOperationType getOperation() {
    return operation;
  }


  /**
   * Sets the value of the 'operation' field.
   * Type of character operation to perform
   * @param value the value to set.
   */
  public void setOperation(de.mhus.nimbus.shared.avro.CharacterOperationType value) {
    this.operation = value;
  }

  /**
   * Gets the value of the 'worldId' field.
   * @return World identifier where the character operation takes place
   */
  public java.lang.String getWorldId() {
    return worldId;
  }


  /**
   * Sets the value of the 'worldId' field.
   * World identifier where the character operation takes place
   * @param value the value to set.
   */
  public void setWorldId(java.lang.String value) {
    this.worldId = value;
  }

  /**
   * Gets the value of the 'characterData' field.
   * @return Character data for single character operations
   */
  public de.mhus.nimbus.shared.avro.CharacterData getCharacterData() {
    return characterData;
  }


  /**
   * Sets the value of the 'characterData' field.
   * Character data for single character operations
   * @param value the value to set.
   */
  public void setCharacterData(de.mhus.nimbus.shared.avro.CharacterData value) {
    this.characterData = value;
  }

  /**
   * Gets the value of the 'batchData' field.
   * @return Batch data for multiple character operations
   */
  public de.mhus.nimbus.shared.avro.CharacterBatchData getBatchData() {
    return batchData;
  }


  /**
   * Sets the value of the 'batchData' field.
   * Batch data for multiple character operations
   * @param value the value to set.
   */
  public void setBatchData(de.mhus.nimbus.shared.avro.CharacterBatchData value) {
    this.batchData = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return Timestamp of the operation in milliseconds
   */
  public java.time.Instant getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * Timestamp of the operation in milliseconds
   * @param value the value to set.
   */
  public void setTimestamp(java.time.Instant value) {
    this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'requestedBy' field.
   * @return Service or user that requested the operation
   */
  public java.lang.String getRequestedBy() {
    return requestedBy;
  }


  /**
   * Sets the value of the 'requestedBy' field.
   * Service or user that requested the operation
   * @param value the value to set.
   */
  public void setRequestedBy(java.lang.String value) {
    this.requestedBy = value;
  }

  /**
   * Creates a new CharacterOperationMessage RecordBuilder.
   * @return A new CharacterOperationMessage RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder newBuilder() {
    return new de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder();
  }

  /**
   * Creates a new CharacterOperationMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CharacterOperationMessage RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder newBuilder(de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder(other);
    }
  }

  /**
   * Creates a new CharacterOperationMessage RecordBuilder by copying an existing CharacterOperationMessage instance.
   * @param other The existing instance to copy.
   * @return A new CharacterOperationMessage RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder newBuilder(de.mhus.nimbus.shared.avro.CharacterOperationMessage other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for CharacterOperationMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CharacterOperationMessage>
    implements org.apache.avro.data.RecordBuilder<CharacterOperationMessage> {

    /** Unique identifier for the message */
    private java.lang.String messageId;
    /** Type of character operation to perform */
    private de.mhus.nimbus.shared.avro.CharacterOperationType operation;
    /** World identifier where the character operation takes place */
    private java.lang.String worldId;
    /** Character data for single character operations */
    private de.mhus.nimbus.shared.avro.CharacterData characterData;
    private de.mhus.nimbus.shared.avro.CharacterData.Builder characterDataBuilder;
    /** Batch data for multiple character operations */
    private de.mhus.nimbus.shared.avro.CharacterBatchData batchData;
    private de.mhus.nimbus.shared.avro.CharacterBatchData.Builder batchDataBuilder;
    /** Timestamp of the operation in milliseconds */
    private java.time.Instant timestamp;
    /** Service or user that requested the operation */
    private java.lang.String requestedBy;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.messageId)) {
        this.messageId = data().deepCopy(fields()[0].schema(), other.messageId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.operation)) {
        this.operation = data().deepCopy(fields()[1].schema(), other.operation);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.worldId)) {
        this.worldId = data().deepCopy(fields()[2].schema(), other.worldId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.characterData)) {
        this.characterData = data().deepCopy(fields()[3].schema(), other.characterData);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasCharacterDataBuilder()) {
        this.characterDataBuilder = de.mhus.nimbus.shared.avro.CharacterData.newBuilder(other.getCharacterDataBuilder());
      }
      if (isValidValue(fields()[4], other.batchData)) {
        this.batchData = data().deepCopy(fields()[4].schema(), other.batchData);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasBatchDataBuilder()) {
        this.batchDataBuilder = de.mhus.nimbus.shared.avro.CharacterBatchData.newBuilder(other.getBatchDataBuilder());
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.requestedBy)) {
        this.requestedBy = data().deepCopy(fields()[6].schema(), other.requestedBy);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing CharacterOperationMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.CharacterOperationMessage other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.messageId)) {
        this.messageId = data().deepCopy(fields()[0].schema(), other.messageId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.operation)) {
        this.operation = data().deepCopy(fields()[1].schema(), other.operation);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.worldId)) {
        this.worldId = data().deepCopy(fields()[2].schema(), other.worldId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.characterData)) {
        this.characterData = data().deepCopy(fields()[3].schema(), other.characterData);
        fieldSetFlags()[3] = true;
      }
      this.characterDataBuilder = null;
      if (isValidValue(fields()[4], other.batchData)) {
        this.batchData = data().deepCopy(fields()[4].schema(), other.batchData);
        fieldSetFlags()[4] = true;
      }
      this.batchDataBuilder = null;
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.requestedBy)) {
        this.requestedBy = data().deepCopy(fields()[6].schema(), other.requestedBy);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'messageId' field.
      * Unique identifier for the message
      * @return The value.
      */
    public java.lang.String getMessageId() {
      return messageId;
    }


    /**
      * Sets the value of the 'messageId' field.
      * Unique identifier for the message
      * @param value The value of 'messageId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setMessageId(java.lang.String value) {
      validate(fields()[0], value);
      this.messageId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'messageId' field has been set.
      * Unique identifier for the message
      * @return True if the 'messageId' field has been set, false otherwise.
      */
    public boolean hasMessageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'messageId' field.
      * Unique identifier for the message
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder clearMessageId() {
      messageId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'operation' field.
      * Type of character operation to perform
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationType getOperation() {
      return operation;
    }


    /**
      * Sets the value of the 'operation' field.
      * Type of character operation to perform
      * @param value The value of 'operation'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setOperation(de.mhus.nimbus.shared.avro.CharacterOperationType value) {
      validate(fields()[1], value);
      this.operation = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'operation' field has been set.
      * Type of character operation to perform
      * @return True if the 'operation' field has been set, false otherwise.
      */
    public boolean hasOperation() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'operation' field.
      * Type of character operation to perform
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder clearOperation() {
      operation = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'worldId' field.
      * World identifier where the character operation takes place
      * @return The value.
      */
    public java.lang.String getWorldId() {
      return worldId;
    }


    /**
      * Sets the value of the 'worldId' field.
      * World identifier where the character operation takes place
      * @param value The value of 'worldId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setWorldId(java.lang.String value) {
      validate(fields()[2], value);
      this.worldId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'worldId' field has been set.
      * World identifier where the character operation takes place
      * @return True if the 'worldId' field has been set, false otherwise.
      */
    public boolean hasWorldId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'worldId' field.
      * World identifier where the character operation takes place
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder clearWorldId() {
      worldId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'characterData' field.
      * Character data for single character operations
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.CharacterData getCharacterData() {
      return characterData;
    }


    /**
      * Sets the value of the 'characterData' field.
      * Character data for single character operations
      * @param value The value of 'characterData'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setCharacterData(de.mhus.nimbus.shared.avro.CharacterData value) {
      validate(fields()[3], value);
      this.characterDataBuilder = null;
      this.characterData = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'characterData' field has been set.
      * Character data for single character operations
      * @return True if the 'characterData' field has been set, false otherwise.
      */
    public boolean hasCharacterData() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'characterData' field and creates one if it doesn't exist yet.
     * Character data for single character operations
     * @return This builder.
     */
    public de.mhus.nimbus.shared.avro.CharacterData.Builder getCharacterDataBuilder() {
      if (characterDataBuilder == null) {
        if (hasCharacterData()) {
          setCharacterDataBuilder(de.mhus.nimbus.shared.avro.CharacterData.newBuilder(characterData));
        } else {
          setCharacterDataBuilder(de.mhus.nimbus.shared.avro.CharacterData.newBuilder());
        }
      }
      return characterDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'characterData' field
     * Character data for single character operations
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setCharacterDataBuilder(de.mhus.nimbus.shared.avro.CharacterData.Builder value) {
      clearCharacterData();
      characterDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'characterData' field has an active Builder instance
     * Character data for single character operations
     * @return True if the 'characterData' field has an active Builder instance
     */
    public boolean hasCharacterDataBuilder() {
      return characterDataBuilder != null;
    }

    /**
      * Clears the value of the 'characterData' field.
      * Character data for single character operations
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder clearCharacterData() {
      characterData = null;
      characterDataBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchData' field.
      * Batch data for multiple character operations
      * @return The value.
      */
    public de.mhus.nimbus.shared.avro.CharacterBatchData getBatchData() {
      return batchData;
    }


    /**
      * Sets the value of the 'batchData' field.
      * Batch data for multiple character operations
      * @param value The value of 'batchData'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setBatchData(de.mhus.nimbus.shared.avro.CharacterBatchData value) {
      validate(fields()[4], value);
      this.batchDataBuilder = null;
      this.batchData = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'batchData' field has been set.
      * Batch data for multiple character operations
      * @return True if the 'batchData' field has been set, false otherwise.
      */
    public boolean hasBatchData() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'batchData' field and creates one if it doesn't exist yet.
     * Batch data for multiple character operations
     * @return This builder.
     */
    public de.mhus.nimbus.shared.avro.CharacterBatchData.Builder getBatchDataBuilder() {
      if (batchDataBuilder == null) {
        if (hasBatchData()) {
          setBatchDataBuilder(de.mhus.nimbus.shared.avro.CharacterBatchData.newBuilder(batchData));
        } else {
          setBatchDataBuilder(de.mhus.nimbus.shared.avro.CharacterBatchData.newBuilder());
        }
      }
      return batchDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'batchData' field
     * Batch data for multiple character operations
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setBatchDataBuilder(de.mhus.nimbus.shared.avro.CharacterBatchData.Builder value) {
      clearBatchData();
      batchDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'batchData' field has an active Builder instance
     * Batch data for multiple character operations
     * @return True if the 'batchData' field has an active Builder instance
     */
    public boolean hasBatchDataBuilder() {
      return batchDataBuilder != null;
    }

    /**
      * Clears the value of the 'batchData' field.
      * Batch data for multiple character operations
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder clearBatchData() {
      batchData = null;
      batchDataBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * Timestamp of the operation in milliseconds
      * @return The value.
      */
    public java.time.Instant getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * Timestamp of the operation in milliseconds
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setTimestamp(java.time.Instant value) {
      validate(fields()[5], value);
      this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * Timestamp of the operation in milliseconds
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * Timestamp of the operation in milliseconds
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder clearTimestamp() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestedBy' field.
      * Service or user that requested the operation
      * @return The value.
      */
    public java.lang.String getRequestedBy() {
      return requestedBy;
    }


    /**
      * Sets the value of the 'requestedBy' field.
      * Service or user that requested the operation
      * @param value The value of 'requestedBy'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder setRequestedBy(java.lang.String value) {
      validate(fields()[6], value);
      this.requestedBy = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'requestedBy' field has been set.
      * Service or user that requested the operation
      * @return True if the 'requestedBy' field has been set, false otherwise.
      */
    public boolean hasRequestedBy() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'requestedBy' field.
      * Service or user that requested the operation
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.CharacterOperationMessage.Builder clearRequestedBy() {
      requestedBy = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CharacterOperationMessage build() {
      try {
        CharacterOperationMessage record = new CharacterOperationMessage();
        record.messageId = fieldSetFlags()[0] ? this.messageId : (java.lang.String) defaultValue(fields()[0]);
        record.operation = fieldSetFlags()[1] ? this.operation : (de.mhus.nimbus.shared.avro.CharacterOperationType) defaultValue(fields()[1]);
        record.worldId = fieldSetFlags()[2] ? this.worldId : (java.lang.String) defaultValue(fields()[2]);
        if (characterDataBuilder != null) {
          try {
            record.characterData = this.characterDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("characterData"));
            throw e;
          }
        } else {
          record.characterData = fieldSetFlags()[3] ? this.characterData : (de.mhus.nimbus.shared.avro.CharacterData) defaultValue(fields()[3]);
        }
        if (batchDataBuilder != null) {
          try {
            record.batchData = this.batchDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("batchData"));
            throw e;
          }
        } else {
          record.batchData = fieldSetFlags()[4] ? this.batchData : (de.mhus.nimbus.shared.avro.CharacterBatchData) defaultValue(fields()[4]);
        }
        record.timestamp = fieldSetFlags()[5] ? this.timestamp : (java.time.Instant) defaultValue(fields()[5]);
        record.requestedBy = fieldSetFlags()[6] ? this.requestedBy : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CharacterOperationMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<CharacterOperationMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CharacterOperationMessage>
    READER$ = (org.apache.avro.io.DatumReader<CharacterOperationMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










