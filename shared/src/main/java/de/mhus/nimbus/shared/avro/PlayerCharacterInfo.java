/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package de.mhus.nimbus.shared.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PlayerCharacterInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1181632218811250870L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PlayerCharacterInfo\",\"namespace\":\"de.mhus.nimbus.shared.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"characterClass\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"level\",\"type\":\"int\",\"default\":1},{\"name\":\"experiencePoints\",\"type\":\"long\",\"default\":0},{\"name\":\"healthPoints\",\"type\":\"int\",\"default\":100},{\"name\":\"maxHealthPoints\",\"type\":\"int\",\"default\":100},{\"name\":\"manaPoints\",\"type\":\"int\",\"default\":100},{\"name\":\"maxManaPoints\",\"type\":\"int\",\"default\":100},{\"name\":\"currentWorldId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"currentPlanet\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"positionX\",\"type\":\"double\",\"default\":0.0},{\"name\":\"positionY\",\"type\":\"double\",\"default\":0.0},{\"name\":\"positionZ\",\"type\":\"double\",\"default\":0.0},{\"name\":\"active\",\"type\":\"boolean\",\"default\":true},{\"name\":\"lastLogin\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"updatedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"userId\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<PlayerCharacterInfo> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PlayerCharacterInfo> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PlayerCharacterInfo> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PlayerCharacterInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PlayerCharacterInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PlayerCharacterInfo to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PlayerCharacterInfo from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PlayerCharacterInfo instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PlayerCharacterInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long id;
  private java.lang.String name;
  private java.lang.String description;
  private java.lang.String characterClass;
  private int level;
  private long experiencePoints;
  private int healthPoints;
  private int maxHealthPoints;
  private int manaPoints;
  private int maxManaPoints;
  private java.lang.String currentWorldId;
  private java.lang.String currentPlanet;
  private double positionX;
  private double positionY;
  private double positionZ;
  private boolean active;
  private java.time.Instant lastLogin;
  private java.time.Instant createdAt;
  private java.time.Instant updatedAt;
  private long userId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PlayerCharacterInfo() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param description The new value for description
   * @param characterClass The new value for characterClass
   * @param level The new value for level
   * @param experiencePoints The new value for experiencePoints
   * @param healthPoints The new value for healthPoints
   * @param maxHealthPoints The new value for maxHealthPoints
   * @param manaPoints The new value for manaPoints
   * @param maxManaPoints The new value for maxManaPoints
   * @param currentWorldId The new value for currentWorldId
   * @param currentPlanet The new value for currentPlanet
   * @param positionX The new value for positionX
   * @param positionY The new value for positionY
   * @param positionZ The new value for positionZ
   * @param active The new value for active
   * @param lastLogin The new value for lastLogin
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   * @param userId The new value for userId
   */
  public PlayerCharacterInfo(java.lang.Long id, java.lang.String name, java.lang.String description, java.lang.String characterClass, java.lang.Integer level, java.lang.Long experiencePoints, java.lang.Integer healthPoints, java.lang.Integer maxHealthPoints, java.lang.Integer manaPoints, java.lang.Integer maxManaPoints, java.lang.String currentWorldId, java.lang.String currentPlanet, java.lang.Double positionX, java.lang.Double positionY, java.lang.Double positionZ, java.lang.Boolean active, java.time.Instant lastLogin, java.time.Instant createdAt, java.time.Instant updatedAt, java.lang.Long userId) {
    this.id = id;
    this.name = name;
    this.description = description;
    this.characterClass = characterClass;
    this.level = level;
    this.experiencePoints = experiencePoints;
    this.healthPoints = healthPoints;
    this.maxHealthPoints = maxHealthPoints;
    this.manaPoints = manaPoints;
    this.maxManaPoints = maxManaPoints;
    this.currentWorldId = currentWorldId;
    this.currentPlanet = currentPlanet;
    this.positionX = positionX;
    this.positionY = positionY;
    this.positionZ = positionZ;
    this.active = active;
    this.lastLogin = lastLogin;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.updatedAt = updatedAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.userId = userId;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return description;
    case 3: return characterClass;
    case 4: return level;
    case 5: return experiencePoints;
    case 6: return healthPoints;
    case 7: return maxHealthPoints;
    case 8: return manaPoints;
    case 9: return maxManaPoints;
    case 10: return currentWorldId;
    case 11: return currentPlanet;
    case 12: return positionX;
    case 13: return positionY;
    case 14: return positionZ;
    case 15: return active;
    case 16: return lastLogin;
    case 17: return createdAt;
    case 18: return updatedAt;
    case 19: return userId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: description = value$ != null ? value$.toString() : null; break;
    case 3: characterClass = value$ != null ? value$.toString() : null; break;
    case 4: level = (java.lang.Integer)value$; break;
    case 5: experiencePoints = (java.lang.Long)value$; break;
    case 6: healthPoints = (java.lang.Integer)value$; break;
    case 7: maxHealthPoints = (java.lang.Integer)value$; break;
    case 8: manaPoints = (java.lang.Integer)value$; break;
    case 9: maxManaPoints = (java.lang.Integer)value$; break;
    case 10: currentWorldId = value$ != null ? value$.toString() : null; break;
    case 11: currentPlanet = value$ != null ? value$.toString() : null; break;
    case 12: positionX = (java.lang.Double)value$; break;
    case 13: positionY = (java.lang.Double)value$; break;
    case 14: positionZ = (java.lang.Double)value$; break;
    case 15: active = (java.lang.Boolean)value$; break;
    case 16: lastLogin = (java.time.Instant)value$; break;
    case 17: createdAt = (java.time.Instant)value$; break;
    case 18: updatedAt = (java.time.Instant)value$; break;
    case 19: userId = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }



  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }



  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }



  /**
   * Gets the value of the 'characterClass' field.
   * @return The value of the 'characterClass' field.
   */
  public java.lang.String getCharacterClass() {
    return characterClass;
  }



  /**
   * Gets the value of the 'level' field.
   * @return The value of the 'level' field.
   */
  public int getLevel() {
    return level;
  }



  /**
   * Gets the value of the 'experiencePoints' field.
   * @return The value of the 'experiencePoints' field.
   */
  public long getExperiencePoints() {
    return experiencePoints;
  }



  /**
   * Gets the value of the 'healthPoints' field.
   * @return The value of the 'healthPoints' field.
   */
  public int getHealthPoints() {
    return healthPoints;
  }



  /**
   * Gets the value of the 'maxHealthPoints' field.
   * @return The value of the 'maxHealthPoints' field.
   */
  public int getMaxHealthPoints() {
    return maxHealthPoints;
  }



  /**
   * Gets the value of the 'manaPoints' field.
   * @return The value of the 'manaPoints' field.
   */
  public int getManaPoints() {
    return manaPoints;
  }



  /**
   * Gets the value of the 'maxManaPoints' field.
   * @return The value of the 'maxManaPoints' field.
   */
  public int getMaxManaPoints() {
    return maxManaPoints;
  }



  /**
   * Gets the value of the 'currentWorldId' field.
   * @return The value of the 'currentWorldId' field.
   */
  public java.lang.String getCurrentWorldId() {
    return currentWorldId;
  }



  /**
   * Gets the value of the 'currentPlanet' field.
   * @return The value of the 'currentPlanet' field.
   */
  public java.lang.String getCurrentPlanet() {
    return currentPlanet;
  }



  /**
   * Gets the value of the 'positionX' field.
   * @return The value of the 'positionX' field.
   */
  public double getPositionX() {
    return positionX;
  }



  /**
   * Gets the value of the 'positionY' field.
   * @return The value of the 'positionY' field.
   */
  public double getPositionY() {
    return positionY;
  }



  /**
   * Gets the value of the 'positionZ' field.
   * @return The value of the 'positionZ' field.
   */
  public double getPositionZ() {
    return positionZ;
  }



  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public boolean getActive() {
    return active;
  }



  /**
   * Gets the value of the 'lastLogin' field.
   * @return The value of the 'lastLogin' field.
   */
  public java.time.Instant getLastLogin() {
    return lastLogin;
  }



  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }



  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public java.time.Instant getUpdatedAt() {
    return updatedAt;
  }



  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public long getUserId() {
    return userId;
  }



  /**
   * Creates a new PlayerCharacterInfo RecordBuilder.
   * @return A new PlayerCharacterInfo RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder newBuilder() {
    return new de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder();
  }

  /**
   * Creates a new PlayerCharacterInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PlayerCharacterInfo RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder newBuilder(de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder(other);
    }
  }

  /**
   * Creates a new PlayerCharacterInfo RecordBuilder by copying an existing PlayerCharacterInfo instance.
   * @param other The existing instance to copy.
   * @return A new PlayerCharacterInfo RecordBuilder
   */
  public static de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder newBuilder(de.mhus.nimbus.shared.avro.PlayerCharacterInfo other) {
    if (other == null) {
      return new de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder();
    } else {
      return new de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder(other);
    }
  }

  /**
   * RecordBuilder for PlayerCharacterInfo instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PlayerCharacterInfo>
    implements org.apache.avro.data.RecordBuilder<PlayerCharacterInfo> {

    private long id;
    private java.lang.String name;
    private java.lang.String description;
    private java.lang.String characterClass;
    private int level;
    private long experiencePoints;
    private int healthPoints;
    private int maxHealthPoints;
    private int manaPoints;
    private int maxManaPoints;
    private java.lang.String currentWorldId;
    private java.lang.String currentPlanet;
    private double positionX;
    private double positionY;
    private double positionZ;
    private boolean active;
    private java.time.Instant lastLogin;
    private java.time.Instant createdAt;
    private java.time.Instant updatedAt;
    private long userId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.characterClass)) {
        this.characterClass = data().deepCopy(fields()[3].schema(), other.characterClass);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.level)) {
        this.level = data().deepCopy(fields()[4].schema(), other.level);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.experiencePoints)) {
        this.experiencePoints = data().deepCopy(fields()[5].schema(), other.experiencePoints);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.healthPoints)) {
        this.healthPoints = data().deepCopy(fields()[6].schema(), other.healthPoints);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.maxHealthPoints)) {
        this.maxHealthPoints = data().deepCopy(fields()[7].schema(), other.maxHealthPoints);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.manaPoints)) {
        this.manaPoints = data().deepCopy(fields()[8].schema(), other.manaPoints);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.maxManaPoints)) {
        this.maxManaPoints = data().deepCopy(fields()[9].schema(), other.maxManaPoints);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.currentWorldId)) {
        this.currentWorldId = data().deepCopy(fields()[10].schema(), other.currentWorldId);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.currentPlanet)) {
        this.currentPlanet = data().deepCopy(fields()[11].schema(), other.currentPlanet);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.positionX)) {
        this.positionX = data().deepCopy(fields()[12].schema(), other.positionX);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.positionY)) {
        this.positionY = data().deepCopy(fields()[13].schema(), other.positionY);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.positionZ)) {
        this.positionZ = data().deepCopy(fields()[14].schema(), other.positionZ);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.active)) {
        this.active = data().deepCopy(fields()[15].schema(), other.active);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.lastLogin)) {
        this.lastLogin = data().deepCopy(fields()[16].schema(), other.lastLogin);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[17].schema(), other.createdAt);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[18].schema(), other.updatedAt);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.userId)) {
        this.userId = data().deepCopy(fields()[19].schema(), other.userId);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
    }

    /**
     * Creates a Builder by copying an existing PlayerCharacterInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(de.mhus.nimbus.shared.avro.PlayerCharacterInfo other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.characterClass)) {
        this.characterClass = data().deepCopy(fields()[3].schema(), other.characterClass);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.level)) {
        this.level = data().deepCopy(fields()[4].schema(), other.level);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.experiencePoints)) {
        this.experiencePoints = data().deepCopy(fields()[5].schema(), other.experiencePoints);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.healthPoints)) {
        this.healthPoints = data().deepCopy(fields()[6].schema(), other.healthPoints);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.maxHealthPoints)) {
        this.maxHealthPoints = data().deepCopy(fields()[7].schema(), other.maxHealthPoints);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.manaPoints)) {
        this.manaPoints = data().deepCopy(fields()[8].schema(), other.manaPoints);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.maxManaPoints)) {
        this.maxManaPoints = data().deepCopy(fields()[9].schema(), other.maxManaPoints);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.currentWorldId)) {
        this.currentWorldId = data().deepCopy(fields()[10].schema(), other.currentWorldId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.currentPlanet)) {
        this.currentPlanet = data().deepCopy(fields()[11].schema(), other.currentPlanet);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.positionX)) {
        this.positionX = data().deepCopy(fields()[12].schema(), other.positionX);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.positionY)) {
        this.positionY = data().deepCopy(fields()[13].schema(), other.positionY);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.positionZ)) {
        this.positionZ = data().deepCopy(fields()[14].schema(), other.positionZ);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.active)) {
        this.active = data().deepCopy(fields()[15].schema(), other.active);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lastLogin)) {
        this.lastLogin = data().deepCopy(fields()[16].schema(), other.lastLogin);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[17].schema(), other.createdAt);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[18].schema(), other.updatedAt);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.userId)) {
        this.userId = data().deepCopy(fields()[19].schema(), other.userId);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setDescription(java.lang.String value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'characterClass' field.
      * @return The value.
      */
    public java.lang.String getCharacterClass() {
      return characterClass;
    }


    /**
      * Sets the value of the 'characterClass' field.
      * @param value The value of 'characterClass'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setCharacterClass(java.lang.String value) {
      validate(fields()[3], value);
      this.characterClass = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'characterClass' field has been set.
      * @return True if the 'characterClass' field has been set, false otherwise.
      */
    public boolean hasCharacterClass() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'characterClass' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearCharacterClass() {
      characterClass = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'level' field.
      * @return The value.
      */
    public int getLevel() {
      return level;
    }


    /**
      * Sets the value of the 'level' field.
      * @param value The value of 'level'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setLevel(int value) {
      validate(fields()[4], value);
      this.level = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'level' field has been set.
      * @return True if the 'level' field has been set, false otherwise.
      */
    public boolean hasLevel() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'level' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearLevel() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'experiencePoints' field.
      * @return The value.
      */
    public long getExperiencePoints() {
      return experiencePoints;
    }


    /**
      * Sets the value of the 'experiencePoints' field.
      * @param value The value of 'experiencePoints'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setExperiencePoints(long value) {
      validate(fields()[5], value);
      this.experiencePoints = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'experiencePoints' field has been set.
      * @return True if the 'experiencePoints' field has been set, false otherwise.
      */
    public boolean hasExperiencePoints() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'experiencePoints' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearExperiencePoints() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'healthPoints' field.
      * @return The value.
      */
    public int getHealthPoints() {
      return healthPoints;
    }


    /**
      * Sets the value of the 'healthPoints' field.
      * @param value The value of 'healthPoints'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setHealthPoints(int value) {
      validate(fields()[6], value);
      this.healthPoints = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'healthPoints' field has been set.
      * @return True if the 'healthPoints' field has been set, false otherwise.
      */
    public boolean hasHealthPoints() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'healthPoints' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearHealthPoints() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxHealthPoints' field.
      * @return The value.
      */
    public int getMaxHealthPoints() {
      return maxHealthPoints;
    }


    /**
      * Sets the value of the 'maxHealthPoints' field.
      * @param value The value of 'maxHealthPoints'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setMaxHealthPoints(int value) {
      validate(fields()[7], value);
      this.maxHealthPoints = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'maxHealthPoints' field has been set.
      * @return True if the 'maxHealthPoints' field has been set, false otherwise.
      */
    public boolean hasMaxHealthPoints() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'maxHealthPoints' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearMaxHealthPoints() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'manaPoints' field.
      * @return The value.
      */
    public int getManaPoints() {
      return manaPoints;
    }


    /**
      * Sets the value of the 'manaPoints' field.
      * @param value The value of 'manaPoints'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setManaPoints(int value) {
      validate(fields()[8], value);
      this.manaPoints = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'manaPoints' field has been set.
      * @return True if the 'manaPoints' field has been set, false otherwise.
      */
    public boolean hasManaPoints() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'manaPoints' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearManaPoints() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxManaPoints' field.
      * @return The value.
      */
    public int getMaxManaPoints() {
      return maxManaPoints;
    }


    /**
      * Sets the value of the 'maxManaPoints' field.
      * @param value The value of 'maxManaPoints'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setMaxManaPoints(int value) {
      validate(fields()[9], value);
      this.maxManaPoints = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'maxManaPoints' field has been set.
      * @return True if the 'maxManaPoints' field has been set, false otherwise.
      */
    public boolean hasMaxManaPoints() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'maxManaPoints' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearMaxManaPoints() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'currentWorldId' field.
      * @return The value.
      */
    public java.lang.String getCurrentWorldId() {
      return currentWorldId;
    }


    /**
      * Sets the value of the 'currentWorldId' field.
      * @param value The value of 'currentWorldId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setCurrentWorldId(java.lang.String value) {
      validate(fields()[10], value);
      this.currentWorldId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'currentWorldId' field has been set.
      * @return True if the 'currentWorldId' field has been set, false otherwise.
      */
    public boolean hasCurrentWorldId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'currentWorldId' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearCurrentWorldId() {
      currentWorldId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'currentPlanet' field.
      * @return The value.
      */
    public java.lang.String getCurrentPlanet() {
      return currentPlanet;
    }


    /**
      * Sets the value of the 'currentPlanet' field.
      * @param value The value of 'currentPlanet'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setCurrentPlanet(java.lang.String value) {
      validate(fields()[11], value);
      this.currentPlanet = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'currentPlanet' field has been set.
      * @return True if the 'currentPlanet' field has been set, false otherwise.
      */
    public boolean hasCurrentPlanet() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'currentPlanet' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearCurrentPlanet() {
      currentPlanet = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'positionX' field.
      * @return The value.
      */
    public double getPositionX() {
      return positionX;
    }


    /**
      * Sets the value of the 'positionX' field.
      * @param value The value of 'positionX'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setPositionX(double value) {
      validate(fields()[12], value);
      this.positionX = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'positionX' field has been set.
      * @return True if the 'positionX' field has been set, false otherwise.
      */
    public boolean hasPositionX() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'positionX' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearPositionX() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'positionY' field.
      * @return The value.
      */
    public double getPositionY() {
      return positionY;
    }


    /**
      * Sets the value of the 'positionY' field.
      * @param value The value of 'positionY'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setPositionY(double value) {
      validate(fields()[13], value);
      this.positionY = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'positionY' field has been set.
      * @return True if the 'positionY' field has been set, false otherwise.
      */
    public boolean hasPositionY() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'positionY' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearPositionY() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'positionZ' field.
      * @return The value.
      */
    public double getPositionZ() {
      return positionZ;
    }


    /**
      * Sets the value of the 'positionZ' field.
      * @param value The value of 'positionZ'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setPositionZ(double value) {
      validate(fields()[14], value);
      this.positionZ = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'positionZ' field has been set.
      * @return True if the 'positionZ' field has been set, false otherwise.
      */
    public boolean hasPositionZ() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'positionZ' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearPositionZ() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public boolean getActive() {
      return active;
    }


    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setActive(boolean value) {
      validate(fields()[15], value);
      this.active = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearActive() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastLogin' field.
      * @return The value.
      */
    public java.time.Instant getLastLogin() {
      return lastLogin;
    }


    /**
      * Sets the value of the 'lastLogin' field.
      * @param value The value of 'lastLogin'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setLastLogin(java.time.Instant value) {
      validate(fields()[16], value);
      this.lastLogin = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'lastLogin' field has been set.
      * @return True if the 'lastLogin' field has been set, false otherwise.
      */
    public boolean hasLastLogin() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'lastLogin' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearLastLogin() {
      lastLogin = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[17], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearCreatedAt() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public java.time.Instant getUpdatedAt() {
      return updatedAt;
    }


    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setUpdatedAt(java.time.Instant value) {
      validate(fields()[18], value);
      this.updatedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearUpdatedAt() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public long getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder setUserId(long value) {
      validate(fields()[19], value);
      this.userId = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public de.mhus.nimbus.shared.avro.PlayerCharacterInfo.Builder clearUserId() {
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PlayerCharacterInfo build() {
      try {
        PlayerCharacterInfo record = new PlayerCharacterInfo();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.String) defaultValue(fields()[2]);
        record.characterClass = fieldSetFlags()[3] ? this.characterClass : (java.lang.String) defaultValue(fields()[3]);
        record.level = fieldSetFlags()[4] ? this.level : (java.lang.Integer) defaultValue(fields()[4]);
        record.experiencePoints = fieldSetFlags()[5] ? this.experiencePoints : (java.lang.Long) defaultValue(fields()[5]);
        record.healthPoints = fieldSetFlags()[6] ? this.healthPoints : (java.lang.Integer) defaultValue(fields()[6]);
        record.maxHealthPoints = fieldSetFlags()[7] ? this.maxHealthPoints : (java.lang.Integer) defaultValue(fields()[7]);
        record.manaPoints = fieldSetFlags()[8] ? this.manaPoints : (java.lang.Integer) defaultValue(fields()[8]);
        record.maxManaPoints = fieldSetFlags()[9] ? this.maxManaPoints : (java.lang.Integer) defaultValue(fields()[9]);
        record.currentWorldId = fieldSetFlags()[10] ? this.currentWorldId : (java.lang.String) defaultValue(fields()[10]);
        record.currentPlanet = fieldSetFlags()[11] ? this.currentPlanet : (java.lang.String) defaultValue(fields()[11]);
        record.positionX = fieldSetFlags()[12] ? this.positionX : (java.lang.Double) defaultValue(fields()[12]);
        record.positionY = fieldSetFlags()[13] ? this.positionY : (java.lang.Double) defaultValue(fields()[13]);
        record.positionZ = fieldSetFlags()[14] ? this.positionZ : (java.lang.Double) defaultValue(fields()[14]);
        record.active = fieldSetFlags()[15] ? this.active : (java.lang.Boolean) defaultValue(fields()[15]);
        record.lastLogin = fieldSetFlags()[16] ? this.lastLogin : (java.time.Instant) defaultValue(fields()[16]);
        record.createdAt = fieldSetFlags()[17] ? this.createdAt : (java.time.Instant) defaultValue(fields()[17]);
        record.updatedAt = fieldSetFlags()[18] ? this.updatedAt : (java.time.Instant) defaultValue(fields()[18]);
        record.userId = fieldSetFlags()[19] ? this.userId : (java.lang.Long) defaultValue(fields()[19]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PlayerCharacterInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<PlayerCharacterInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PlayerCharacterInfo>
    READER$ = (org.apache.avro.io.DatumReader<PlayerCharacterInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










