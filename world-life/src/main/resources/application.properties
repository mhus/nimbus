# World Life Service Configuration
spring.application.name=world-life-service
server.port=7085

# Database Configuration - Using Docker Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/nimbus
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=nimbus
spring.datasource.password=nimbus123

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Kafka Configuration - Using Docker Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=world-life-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Schema Registry Configuration
spring.kafka.properties.schema.registry.url=http://localhost:8082

# Actuator configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Logging configuration
logging.level.de.mhus.nimbus.worldlife=DEBUG
logging.level.org.springframework=INFO
