server:
  port: 8080

spring:
  application:
    name: nimbus-entrance

  # Kafka Configuration (falls benötigt für SecurityService)
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: entrance-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8081

logging:
  level:
    de.mhus.nimbus.entrance: DEBUG
    org.springframework.web.socket: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/entrance-debug.log

# WebSocket Configuration
websocket:
  allowed-origins: "*"  # In Produktion sollte dies restriktiver sein
  message-size-limit: 65536  # 64KB
  buffer-size-limit: 1048576  # 1MB

# Security Configuration
nimbus:
  entrance:
    session-timeout: 3600  # Session-Timeout in Sekunden (1 Stunde)
    max-connections: 1000   # Maximale gleichzeitige Verbindungen
